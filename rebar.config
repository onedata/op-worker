%% behaviours should be compiled before other files
{erl_first_files, [
    "src/cluster_elements/worker_host/worker_plugin_behaviour.erl",
    "src/http/rest/protocol_plugin_behaviour.erl",
    "src/modules/fslogic/security_annotations/check_permissions.erl"
]}.

%% eunit opts - Maven-like output formatting
{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "./test/eunit_results"}]}}]}.

%% Test coverage
{cover_enabled, true}.

{dialyzer, [
    {warnings, [error_handling, race_conditions]},
    {plt_extra_apps, [ranch, ctool]}
]}.

%% deps options
{deps, [
    {ctool, {git, "ssh://git@git.plgrid.pl:7999/vfs/ctool.git", {ref, "97de0356443"}}},
    {cluster_worker,{git, "ssh://git@git.plgrid.pl:7999/vfs/cluster-worker.git", {ref, "dbfb182874e"}}},
    {cluster_manager, {raw, {git, "ssh://git@git.plgrid.pl:7999/vfs/cluster-manager.git", {ref, "a503504b807"}}}},
    {gui, {git, "ssh://git@git.plgrid.pl:7999/vfs/gui.git", {ref, "e4a09c3"}}},
    {clproto, {git, "ssh://git@git.plgrid.pl:7999/vfs/clproto.git", {ref, "d8e54b180df"}}},
    {rrdtool, {git, "https://github.com/mwrona/erlang-rrdtool.git", "master"}},
    {poolboy, {git, "https://github.com/devinus/poolboy.git", {tag, "1.5.1"}}},
    {meck, {git, "https://github.com/eproxus/meck.git", {tag, "0.8.4"}}},
    {gen_server_mock, {git, "git://github.com/brucexin/gen_server_mock.git", {ref, "de3cd8e"}}},
    {jiffy, {git, "https://github.com/davisp/jiffy.git", {ref, "0.14.4"}}},
    %% parse_trans repeated from ctool to fetch it before annotations' inner dependency
    {parse_trans, {git, "https://github.com/uwiger/parse_trans.git", {tag, "2.9.2"}}},
    % Riakc uses meck that blocks cover in Erlang 18.x
    % If riak is used, uncomment line below and change meck to 0.8.2
    % {riakc, ".*", {git, "git://github.com/basho/riak-erlang-client.git", {tag, "527722d"}}},
    {iso8601, {git, "https://github.com/xorver/erlang_iso8601.git", {ref, "72013b0"}}},
    {observer_cli, "1.0.7"},
    {gen_server2, {git, "http://github.com/kzemek/gen_server2.git", {branch, "master"}}}
]}.

%% plugins
{plugins, [rebar3_hex, rebar3_elixir,
    {rebar_raw_resource,
        {git, "git://github.com/tburghart/rebar_raw_resource.git",
        {ref, "0.5.0"}}
    }
]}.

%% pre-hooks
{pre_hooks, [
    {eunit, "mkdir -p test/eunit_results"}, %% Make dir for eunit' surefire test results
    %% Sometimes, in some cases epmd daemon doesn't start during eunit tests,
    %% so we need to force start it
    {eunit, "epmd -daemon"},
    %% Helpers compilation
    {clean, "make -C helpers/ clean"},
    %% NIFs compilation
    {compile, "mkdir -p priv"},
    {compile, "make -C c_src"}
]}.

{post_hooks, [
    {compile, "rm -rf priv/*.a"},
    {release, "rm -f _build/*/rel/op_worker/bin/install_upgrade.escript"},
    {release, "rm -f _build/*/rel/op_worker/bin/nodetool"},
    {release, "rm -f _build/*/rel/op_worker/bin/op_worker-*"},
    {release, "rm -f _build/*/rel/op_worker/bin/start_clean.boot"}
]}.

%% Cleanup
{clean_files, [
    "./c_src/*/*.o",
    "./test/eunit_results",
    "./priv/*.so",
    "./priv/helpers",
    "./test_distributed/logs/*",
    "./test_distributed/*.beam"
]}.

%% Erlang options, defines
{erl_opts, [
    {src_dirs, ["src"]},
    {d, 'WITH_JIFFY'}
]}.
%% Add the tuple below to erl_opts proplist to turn on lager parse transform
%% (this is not needed as long as ctool logger is used)
%% {parse_transform, lager_transform}
%% Add the tuple below to erl_opts proplist to completely turn off debug messages
%% {d, skip_debug}

%% relx configuration
{relx, [
    {release, {"op_worker", "1.0.0"},
        [
            kernel,
            stdlib,
            xmerl,
            sasl,
            public_key,
            lager,
            crypto,
            inets,
            clproto,
            gui,
            mnesia,
            % All ctool deps will be included in the release package,
            % so there is no need to list them here.
            ctool,
            % cluster-worker is started as permanent
            {cluster_worker, permanent},
            couchbeam,
            {observer_cli, load},
            {gen_server2, load},
            %% deps included by default by reltool but not included by relx
            {base64url, load},
            certifi,
            {common_test, load},
            {debugger, load},
            {dht_ring, load},
            {edoc, load},
            {enacl_p, load},
            {erts, load},
            {eunit, load},
            hackney,
            {iso8601, load},
            {jiffy, load},
            {jsx, load},
            {macaroons, load},
            {mcd, load},
            {mochiweb, load},
            {observer, load},
            {poolboy, load},
            {rrdtool, load},
            {runtime_tools, load},
            {snmp, load},
            {wx, load},
            op_worker
        ]},

    {vm_args, "rel/files/vm.args"},
    {sys_config, "rel/files/app.config"},
    {target_dir, "op_worker"},
    {include_src, false},
    {dev_mode, true},


    {overlay, [
        %% Copy base files for starting and interacting with node
        {copy, "node_package/priv/base/erl", "erts-{{erts_vsn}}/bin/erl"},
        {copy, "node_package/priv/base/nodetool", "erts-{{erts_vsn}}/bin/nodetool"},
        {template, "node_package/priv/base/runner", "bin/op_worker"},
        {template, "node_package/priv/base/env.sh", "lib/env.sh"},

        %% Copy config files
        {mkdir, "etc"},
        {template, "rel/files/app.config", "etc/app.config"},
        {template, "rel/files/vm.args", "etc/vm.args"},
        {copy, "cacerts", "./etc/"},
        {copy, "certs", "./etc/"},

        %% Copy additional data files
        {mkdir, "data"},
        {copy, "LICENSE.txt", "./data/"},

        %% Copy GUI
        {copy, "_build/default/lib/gui_static", "./data/gui_static"}
    ]},

    {extended_start_script, true}
]}.

%% Profiles configuration
{profiles, [
    {package, [
        {relx, [{dev_mode, false}]}
    ]},
    {bamboo, [
        {relx, [{dev_mode, false}]},
        {post_hooks, [
            {release, "rm -rf _build/default/rel"},
            {release, "mv -f _build/bamboo/rel _build/default"},
            {release, "rm -rf _build/default/lib/op_worker"},
            {release, "mv -f _build/bamboo/lib/op_worker _build/default/lib"}
        ]}
    ]}
]}.

{overrides,
    [{override, jiffy, [
        {plugins, [pc]},
        {artifacts, ["priv/jiffy.so"]},
        {provider_hooks, [
            {post,
                [
                    {compile, {pc, compile}},
                    {clean, {pc, clean}}
                ]
            }]
        }
    ]}
]}.
