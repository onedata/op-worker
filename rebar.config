%% behaviours should be compiled before other files
{erl_first_files, [
    "src/cluster_elements/worker_host/worker_plugin_behaviour.erl",
    "src/modules/fslogic/check_permissions.erl",
    "deps/ctool/annotations/performance.erl"
]}.

%% directory for releases
{sub_dirs, ["rel"]}.

%% to include deps headers
{lib_dirs, ["deps"]}.

%% eunit opts - Maven-like output formatting
{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "../test/eunit_results"}]}}]}.

%% Test coverage
{cover_enabled, true}.

%% deps options
{deps, [
    {ctool, ".*", {git, "ssh://git@git.plgrid.pl:7999/vfs/ctool.git", {tag, "45c6817"}}},
    {clproto, ".*", {git, "ssh://git@git.plgrid.pl:7999/vfs/clproto.git", {tag, "62ea25fdc78"}}},
    {meck, "0.8.2", {git, "https://github.com/eproxus/meck.git", {tag, "0.8.2"}}},
    {gen_server_mock, ".*", {git, "git://github.com/brucexin/gen_server_mock.git", {tag, "de3cd8e"}}},
    {mochiweb, ".*", {git, "git://github.com/mochi/mochiweb.git", {tag, "v2.8.0"}}},
    {parse_trans, ".*", {git, "https://github.com/esl/parse_trans.git", {tag, "763462825e"}}},
    {annotations, ".*", {git, "https://github.com/hyperthunk/annotations.git", {tag, "3f257db848"}}},
    {riakc, "2.0.1", {git, "git://github.com/basho/riak-erlang-client.git", {tag, "2.0.1"}}},
    {node_package, ".*", {git, "git://github.com/xorver/node_package.git", {branch, "2.0"}}}
]}.

%% plugins
{plugins, [rebar_git_plugin, rebar_annotations_plugin]}.

%% pre-hooks
{pre_hooks, [
    {eunit, "mkdir -p test/eunit_results"}, %% Make dir for eunit' surefire test results
    {eunit, "epmd -daemon"}, %% Sometimes, in some cases epmd daemon doesn't start during eunit tests,
                             %% so we need to force start it
    {compile, "mkdir -p c_lib"},
    {compile, "ln -sf $(${CC} -print-file-name=libstdc++.a) c_lib"}, %% libstdc++ static linkage
    {compile, "chmod +x c_src/oneproxy/build_oneproxy.sh"},
    {compile, "c_src/oneproxy/build_oneproxy.sh c_lib"},
    %% gen_dev compilation
    {clean, "make -C bamboos/gen_dev/ clean"},
    {compile, "make -C bamboos/gen_dev/ compile"}
]}.

{post_hooks, [
    {compile, "chmod +x c_src/link_shared.sh"},
    {compile, "./c_src/link_shared.sh globus gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh boost gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh ssl gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh ltdl gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh krb gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh c++ gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh stdc++ gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh k5 gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh crypto gpv_drv.so oneproxy"},
    {compile, "./c_src/link_shared.sh botan gpv_drv.so oneproxy"},
    {compile, "rm -rf c_lib/*.a"},
    {compile, "cp ebin/*SUITE* test_distributed/"}
    %% {"darwin", compile, "install_name_tool -change libhelpers.dylib @loader_path/libhelpers.dylib c_lib/gpv_drv.so"}
]}.

%% Cleanup
{clean_files, [
    "test/eunit_results",
    "c_lib",
    "c_src/oneproxy/build",
    "test_distributed/logs/*",
    "test_distributed/*.beam"
]}.

%% Erlang options, defines
{erl_opts, [{src_dirs, ["src", "test_distributed"]}]}.
%% Add the tuple below to erl_opts proplist to turn on lager parse transform
%% (this is not needed as long as ctool logger is used)
%% {parse_transform, lager_transform}
%% Add the tuple below to erl_opts proplist to completely turn off debug messages
%% {d, skip_debug}

{port_env, [
    {"LDFLAGS", "$LDFLAGS -lhelpers -Bstatic -lboost_system -lboost_thread -Wl,"
    "-rpath,./c_lib -Wl,-rpath,./c_lib -Wl,-rpath,../c_lib -Wl,-rpath,. -L ./c_lib"},
    {"CXXFLAGS", "$CXXFLAGS -std=c++11 -I ./helpers/include -I ./helpers/release "
    "-I ./helpers/release/include -DFUSE_USE_VERSION=29 `pkg-config fuse --cflags`"}
]}.

%% Options for erlyDTL (templates for GUI)
{erlydtl_opts, [
    {compiler_options, [report, return, debug_info]},
    {doc_root, "src/gui/pages"},
    {out_dir, "ebin"},
    {source_ext, ".html"},
    {module_ext, "_view"}
]}.
