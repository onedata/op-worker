[
    %% kernel config for ccm distributed application
    {kernel, [
        {distributed, [{oneprovider_node, 5000, ['nonode@nohost', {'nonode@nohost', 'nonode@nohost'}]}]},
        {sync_nodes_mandatory, ['nonode@nohost', 'nonode@nohost']},
        {sync_nodes_timeout, 60000}
    ]},

    %% SASL config
    {sasl, [{sasl_error_logger, false}]},

    %% logger configuration
    {lager, [
        {handlers, [
            %% show info level or higher level logs at console
            {lager_console_backend, info},
            %% rotate error log once a month (first day of month, 1 a.m) or when it reaches 1 GB; keep 1000 rotated logs
            {lager_file_backend, [{file, "log/error.log"}, {level, error}, {size, 1048576000}, {date, "$M1D1"}, {count, 1000}]},
            %% rotate info log once a week (friday at 11 p.m) or when it reaches 100 MB; keep 100 rotated logs
            {lager_file_backend, [{file, "log/info.log"}, {level, info}, {size, 104857600}, {date, "$W5D23"}, {count, 100}]},
            %% rotate info log once a day (at midnight) or when it reaches 10 MB; keep 10 rotated logs
            {lager_file_backend, [{file, "log/debug.log"}, {level, debug}, {size, 10485760}, {date, "$D0"}, {count, 10}]},
            {central_logging_backend, debug}
        ]},
        {error_logger_hwm, 200},
        % When lager should change mode to synchronous (log queue is longer than async_threshold)
        {async_threshold, 500},
        % When lager should return from mode to synchronous (log queue is shorter than (async_threshold - async_threshold_window)
        {async_threshold_window, 50}
    ]},

    %% oneprovider_node config
    {oneprovider_node, [
        %% ===================================================================
        %% GENERAL
        %% ===================================================================

        %% Developer mode unlocks functionalities like logging in without Global Registry
        {developer_mode, false},
        %% List of trusted OpenID providers that can provide user's login that can be associated with OS username.
        {trusted_openid_providers, [plgrid]},
        %% Node type (worker or ccm)
        {node_type, ccm},
        %% List of possible ccm nodes
        {ccm_nodes, ['ccm@localhost']},
        %% List of all DBMS nodes
        {db_nodes, ['db@localhost']},
        %% Path to storage config file
        {storage_config_path, "/root/oneprovider/storage.cfg"},
        %% How long should ccm wait for workers before it initializes cluster
        {initialization_time, 10},
        %% After callback_ack_time node_manager stops waiting for ack
        {callback_ack_time, 60},
        %% How long (in sec) should worker sleep before next connection try (when it cannot connect to ccm)
        {heart_beat, 60},
        %% Memory size which stores information about worker load
        {worker_load_memory_size, 1000},
        %% Path to certificate used by ranch_ssl in gui handler
        {web_ssl_cert_path, "./certs/onedataServerWeb.pem"},
        %% Path to certificate used by ranch_ssl in fuse clients handler
        {fuse_ssl_cert_path, "./certs/onedataServerFuse.pem"},
        %% How often fslogic should clean not used descriptors
        {fslogic_cleaning_period, 600},
        %% How often (in seconds) fslogic should update view counting user's files size
        {user_files_size_view_update_period, 60},
        %% How often should central cluster manager wait between successive checks of node status
        {cluster_monitoring_period, 60},
        %% How long (in seconds) cluster manager should wait before it starts monitoring
        {cluster_monitoring_initialization, 30},
        %% How often should node manager wait between successive checks of node status
        {node_monitoring_period, 10},
        %% How long (in seconds) node manager should wait before it starts monitoring
        {node_monitoring_initialization, 10},
        %% How often (in seconds) should load of each node be logged
        {node_load_logging_period, 10},
        %% After delete_storage_test_file_time seconds storage test file will be deleted
        {delete_storage_test_file_time, 60},
        %% Short time window (in seconds) for which Round Robin Database will be queried
        {short_monitoring_time_window, 60},
        %% Medium time window (in seconds) for which Round Robin Database will be queried
        {medium_monitoring_time_window, 300},
        %% Long time window (in seconds) for which Round Robin Database will be queried
        {long_monitoring_time_window, 900},
        %% Prefix to c_lib directory containing NIF libs
        {nif_prefix, "."},
        %% Ports used by application, that need to be free before oneprovider node can start
        {ports_in_use, [control_panel_port, control_panel_redirect_port, dns_port, dispatcher_port, rest_port]},
        %% Name of storage configuration file used by client during automatic storage detection
        {storage_config_name, "vfs_storage.info"},

        %% ===================================================================
        %% RRDERLANG
        %% ===================================================================

        %% Time in ms after which rrderlang answers with error
        {rrd_timeout, 5000},
        %% Defines how many primary data points - divided by monitoring period - are collected
        {rrd_size, 7200},
        %% Defines how many primary data points are used to build a consolidated data point which then goes into the archive
        {rrd_steps, [1, 24, 168, 720, 8760]},

        %% ===================================================================
        %% DISPATCHER
        %% ===================================================================

        %% Number of threads used by dispatcher
        {dispatcher_pool_size, 1000},
        %% Number of port used by dispatcher
        {dispatcher_port, 5555},
        %% Time in ms after witch ranch kills thread that does nothing
        {ranch_timeout, 5000},
        %% Time in ms after witch ranch answers with error
        {dispatcher_timeout, 120000},
        %% path to dir containing CA and CRL certs used by GSI handler
        {ca_dir, "cacerts"},
        %% path to dir containing server certs used by GSI handler
        {certs_dir, certs},
        %% the interval between CRL updates done by GSI handler
        {crl_update_interval, 3600000},

        %% ===================================================================
        %% CONTROL PANEL
        %% ===================================================================

        %% Port on which control_panel is available
        {control_panel_port, 443},
        %% Port on which standard HTTP will be opened to redirect requests to HTTPS
        {control_panel_redirect_port, 80},
        %% Port on which REST API is available
        {rest_port, 8443},
        %% Directory in release where static gui files are stored
        {control_panel_static_files_root, "./gui_static"},
        %% Number of accepting processes in control_panel listener
        {control_panel_number_of_acceptors, 100},
        %% Number of accepting processes on port 80 (redirecting to https)
        {control_panel_number_of_http_acceptors, 50},
        %% Maximum number of HTTP requests without closing the connection (HTTP/1.1 only)
        {control_panel_max_keepalive, 30},
        %% Socket timeout in ms
        {control_panel_socket_timeout, 60000},
        %% Time for healtcheck response
        {nagios_healtcheck_timeout, 2000},
        %% Maximum post body size for a file upload (data/multipart) in Bytes
        {multipart_max_length, 107374182400},
        %% Buffer size used to send file to a client
        {control_panel_download_buffer, 1048576},
        %% Buffer size used to stream file from a client
        {control_panel_upload_buffer, 1048576},
        %% Period between automatic deletion of expired session tokens, in seconds.
        {control_panel_sessions_clearing_period, 7200},
        %% Cookies time to live - expiration date will be set this many seconds from time of creation (in seconds).
        {control_panel_sessions_cookie_ttl, 3600},

        %% ===================================================================
        %% GLOBAL REGISTRY INTERFACING
        %% ===================================================================

        %% Path to .pem file containing the private key to the grpcert.
        {global_registry_provider_key_path, "certs/grpkey.pem"},
        %% Path to .pem file containing the certificate signed by Global Registry CA, used for authorizing requests to it.
        {global_registry_provider_cert_path, "certs/grpcert.pem"},
        %% Path to .pem file containing the Global Registry CA certificate.
        {global_registry_ca_cert_path, "cacerts/grpCA.pem"},
        %% Global Registry hostname.
        {global_registry_hostname, "https://onedata.org"},
        %% Global Registry REST API endpoint URL.
        {global_registry_url, "https://onedata.org:8443"},

        %% ===================================================================
        %% FILES MANAGEMENT
        %% ===================================================================

        %% Default mode for new file (mode stored in db) (8#600)
        {new_file_logic_mode, 384},
        %% Default mode for new file (mode stored in db) inside groups directory (8#640)
        {new_group_file_logic_mode, 416},
        %% Default mode for new file at storage system (8#600)
        {new_file_storage_mode, 384},
        %% Default mode for new file at storage system inside groups directory (8#640)
        {new_group_file_storage_mode, 416},
        %% Default mode for new directory at storage system (8#1330)
        {new_dir_storage_mode, 728},
        %% Lowest GID used for files that shall belong to group that doesn't exist in OS.
        {lowest_generated_storage_gid, 70000},
        %% Block size for inter-provider file read/write operation
        {provider_proxy_block_size, 1048576},

        %% ===================================================================
        %% DNS
        %% ===================================================================

        %% How long dns response remains valid (in sec)
        {dns_response_ttl, 60},
        %% Number of dns tcp acceptors
        {dns_tcp_acceptor_pool_size, 50},
        %% Time (in sec) after which dns closes idle connection
        {dns_tcp_timeout, 30},
        %% DNS port
        {dns_port, 53},

        %% ===================================================================
        %% DAO
        %% ===================================================================

        %% This variable determinates how often FUSE sessions shall be checked (in seconds).
        %% Note that session will be discarded only when there are no connections active for the session.
        {fuse_session_expire_time, 10800},
        %% This variable determinates how often DAO fuse cache maintnance process shall fire up all its jobs (in seconds).
        {dao_fuse_cache_loop_time, 1800},
        %% This variable determinates how often DAO storage cache should be cleared (in seconds).
        {storage_cache_loop_time, 86400},
        %% This variable determinates how often DAO storage cache should be cleared (in seconds).
        {users_cache_loop_time, 86400},
        %% Defines how often io event is generated in terms of read or written bytes.
        {io_bytes_threshold, 1048576},
        %% Location of database views definitions.
        {view_def_location, "views/"},

        %% ===================================================================
        %% QUOTA MANAGEMENT
        %% ===================================================================

        %% This variable will be used to determine user quota if property size of quota doc of user has not been changed after user creation.
        %% By default user quota is saved in db per user as special value indicating that default_quota should be used.
        %% So if you change this value it will be applied to all users (existing and those that will be created in future) except of those whose quota has been manually changed.
        {default_quota, 10737418240},
        %% This variable determines after how many bytes written quota check is performed.
        {quota_check_freq, 10485760}
    ]}
].