#!/bin/bash

## ===================================================================
## @author Tomasz Lichon
## @copyright (C): 2014 ACK CYFRONET AGH
## This software is released under the MIT license
## cited in 'LICENSE.txt'.
## @end
## ===================================================================
## @doc: This script creates DEB package.
## @end
## ===================================================================

# DEB package version
GIT_VERSION=`git describe --tags --always | tr - .`
VERSION=${GIT_VERSION:1} #strip the leading 'v'

# Path, where deb building will take place
DEB_BUILD_DIRECTORY=/tmp/oneprovider_debbuild

# Bigcouch release submodule
BIGCOUCH_RELEASE_DIRECTORY=`git rev-parse --show-toplevel`/bigcouchdb/database_node

# Onepanel release submodule
ONEPANEL_RELEASE_DIRECTORY=`git rev-parse --show-toplevel`/onepanel/rel_oneprovider/onepanel

# Name of the package with version
PKG_ID=oneprovider_$VERSION

# Tarball name
TARBALL_NAME=${PKG_ID}.orig.tar.gz

# Path, where we put files that should be included in deb package
DEB_ROOT=$DEB_BUILD_DIRECTORY/$PKG_ID
DEB_TMP_ROOT=$DEB_BUILD_DIRECTORY/tmp

##############################
# Exit on any failure
set -e

# Enter script directory
RUNNER_SCRIPT_DIR=$(cd ${0%/*} && pwd)
cd ${RUNNER_SCRIPT_DIR}

# Check if oneprovider_node release exists
if [[ ! -d "../oneprovider_node" ]]; then
  	echo "Generate a release first."
fi

# Prepare directories
rm -rf ${DEB_BUILD_DIRECTORY}
mkdir -p ${DEB_BUILD_DIRECTORY}
mkdir -p $DEB_ROOT/DEBIAN

# Copy config files and set version
cp -R ${RUNNER_SCRIPT_DIR}/DEBIAN/* $DEB_ROOT/DEBIAN
sed -i -e s/"{{version}}"/"${VERSION}"/g $DEB_ROOT/DEBIAN/control
chmod 755 $DEB_ROOT/DEBIAN/postinst
chmod 755 $DEB_ROOT/DEBIAN/prerm
chmod 755 $DEB_ROOT/DEBIAN/postrm

## Create source tarball
#git archive --format=tar --prefix=${PKG_ID}/ HEAD | gzip >${TARBALL_NAME}
#mv ${TARBALL_NAME} $DEB_BUILD_DIRECTORY/
#cd $DEB_ROOT

# Attach oneprovider release
mkdir -p $DEB_TMP_ROOT/files/oneprovider_node
cp -R ${RUNNER_SCRIPT_DIR}/sources/* $DEB_TMP_ROOT/
cp -R ${RUNNER_SCRIPT_DIR}/../oneprovider_node/* $DEB_TMP_ROOT/files/oneprovider_node
sed -i -e s%"/etc/init.d/functions"%"/lib/lsb/init-functions"%g $DEB_TMP_ROOT/oneprovider_init_d
sed -i -e s%"success"%"echo \"[  OK  ]\""%g $DEB_TMP_ROOT/oneprovider_init_d
sed -i -e s%"failure"%"echo \"[FAILED]\""%g $DEB_TMP_ROOT/oneprovider_init_d
sed -i -e s%"/var/lock/subsys"%"/var/lock"%g $DEB_TMP_ROOT/oneprovider_init_d
sed -i -e s%"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"%"/etc/ssl/certs/ca-certificates.crt"%g $DEB_TMP_ROOT/files/oneprovider_node/releases/1.0.0/sys.config

# Attach bigcouch release
mkdir -p $DEB_TMP_ROOT/files/database_node
cp -R ${BIGCOUCH_RELEASE_DIRECTORY}/*  $DEB_TMP_ROOT/files/database_node
cp ${BIGCOUCH_RELEASE_DIRECTORY}/../debian_libs/crypto.so $DEB_TMP_ROOT/files/database_node/lib/crypto-2.0.4/priv/lib/crypto.so

# Attach onepanel release
mkdir -p $DEB_TMP_ROOT/files/onepanel_node
cp -R ${ONEPANEL_RELEASE_DIRECTORY}/*  $DEB_TMP_ROOT/files/onepanel_node
sed -i -e s%"/etc/rc.d/init.d/functions"%"/lib/lsb/init-functions"%g $DEB_TMP_ROOT/files/onepanel_node/scripts/onepanel_init_d
sed -i -e s%"success"%"echo \"[  OK  ]\""%g $DEB_TMP_ROOT/files/onepanel_node/scripts/onepanel_init_d
sed -i -e s%"failure"%"echo \"[FAILED]\""%g $DEB_TMP_ROOT/files/onepanel_node/scripts/onepanel_init_d
sed -i -e s%"/var/lock/subsys"%"/var/lock/"%g $DEB_TMP_ROOT/files/onepanel_node/scripts/onepanel_init_d

# Install files with adequate mode
cd $DEB_TMP_ROOT
${RUNNER_SCRIPT_DIR}/sources/install_rpm $DEB_ROOT /opt/oneprovider

# Run dpkg-deb build
cd $DEB_BUILD_DIRECTORY
dpkg-deb --build $PKG_ID

# Copy result
cp $DEB_BUILD_DIRECTORY/oneprovider_*.deb $RUNNER_SCRIPT_DIR/../
