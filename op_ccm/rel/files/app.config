[
    % TODO this is needed to deploy oneprovider on distributed env on dockers
    % Range of ports that will be used by erlang nodes to communicate
    {kernel,[
        {inet_dist_listen_min, 9100},
        {inet_dist_listen_max, 9139}
    ]},

    %% SASL config
    {sasl, [{sasl_error_logger, false}]},

    %% logger configuration
    {lager, [
        {handlers, [
            %% show info level or higher level logs at console
            {lager_console_backend, info},
            %% rotate error log once a month (first day of month, 1 a.m) or when it reaches 1 GB; keep 1000 rotated logs
            {lager_file_backend, [{file, "{{platform_log_dir}}/error.log"}, {level, error}, {size, 1048576000}, {date, "$M1D1"}, {count, 1000}]},
            %% rotate info log once a week (friday at 11 p.m) or when it reaches 100 MB; keep 100 rotated logs
            {lager_file_backend, [{file, "{{platform_log_dir}}/info.log"}, {level, info}, {size, 104857600}, {date, "$W5D23"}, {count, 100}]},
            %% rotate info log once a day (at midnight) or when it reaches 10 MB; keep 10 rotated logs
            {lager_file_backend, [{file, "{{platform_log_dir}}/debug.log"}, {level, debug}, {size, 10485760}, {date, "$D0"}, {count, 10}]}
        ]},
        {error_logger_hwm, 200},
        % When lager should change mode to synchronous (log queue is longer than async_threshold)
        {async_threshold, 500},
        % When lager should return from mode to synchronous (log queue is shorter than (async_threshold - async_threshold_window)
        {async_threshold_window, 50}
    ]},

    %% op_ccm config
    {op_ccm, [
        %% ===================================================================
        %% GENERAL
        %% ===================================================================

        %% List of possible ccm nodes - configured automatically by configurator.erl lib, used in GEN_DEV script
        {ccm_nodes, ['ccm@127.0.0.1']},
        %% How many worker nodes are expected to connect to ccm - configured automatically by configurator.erl lib, used in GEN_DEV script
        {worker_num, undefined},
        % How often should load balancing advices be recomputed and sent to nodes [ms].
        {lb_advices_update_interval, 500},
        %% List of beam directories to be covered, cover is not started if list is empty
        {covered_dirs, []},
        %% List of modules to be excluded during cover analysis
        {covered_excluded_modules, []}
    ]}
].
